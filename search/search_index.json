{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Dokumentacja projektu grupowego","text":"<p>ASEiED - Analiza zmian temperatury w Europie</p>"},{"location":"#skad-grupy","title":"Sk\u0142ad grupy","text":"Imi\u0119 Nazwisko Nick na githubie Numer indeksu Dawid Mielewczyk D-Mielewczyk 189637 Katarzyna \u0141abu\u0144ska katlabu 188886 Maksymilian Mieszkowski Maxifunny 188871 Igor Malkovskiy Garikmal 187717 Oliwer Losvik StainedMentor 188629 Agnieszka Stromska agkittens 188560 Camille Nadir Pro100wnick1 188779 Jakub Kabat SamePinchy 191339 Sebastian Parzych SebastianPPP 188609 Mi\u0142osz Smolarczyk Marlon1385 189008 Olaf \u0141ogin olaaaf 184090 Kamil Pipka KamilPPP 188967"},{"location":"POETRY/","title":"Poetry Usage Tutorial","text":"<p>This tutorial will guide you through the essential steps to use a repository with Poetry. We'll cover installing dependencies, activating the shell, and adding/searching for packages.</p>"},{"location":"POETRY/#prerequisites","title":"Prerequisites","text":"<p>Make sure you have Poetry installed. Use the appropriate command for your operating system:</p>"},{"location":"POETRY/#windows-powershell","title":"Windows (powershell)","text":"<pre><code>(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -\n</code></pre>"},{"location":"POETRY/#macos-with-homebrew","title":"macOS (with Homebrew)","text":"<pre><code>brew install poetry\n</code></pre>"},{"location":"POETRY/#linux","title":"Linux","text":"<pre><code>curl -sSL https://install.python-poetry.org | python3 -\n</code></pre>"},{"location":"POETRY/#step-1-installing-dependencies","title":"Step 1: Installing Dependencies","text":"<p>To install the dependencies for your project, navigate to the project directory and run:</p> <pre><code>poetry install\n</code></pre> <p>This command reads the <code>pyproject.toml</code> file in your project directory and installs the specified dependencies.</p>"},{"location":"POETRY/#step-2-activating-the-virtual-environment","title":"Step 2: Activating the Virtual Environment","text":"<p>Poetry creates a virtual environment for your project. To activate this environment, you can use the <code>poetry shell</code> command:</p> <pre><code>poetry shell\n</code></pre> <p>This command activates the virtual environment, allowing you to run commands in an isolated environment specific to your project.</p>"},{"location":"POETRY/#step-3-adding-packages","title":"Step 3: Adding Packages","text":"<p>To add a package to your project, use the <code>poetry add</code> command followed by the package name. For example, to add <code>requests</code> to your project:</p> <pre><code>poetry add requests\n</code></pre> <p>Poetry will automatically update your <code>pyproject.toml</code> file and install the package.</p>"},{"location":"POETRY/#step-4-searching-for-packages","title":"Step 4: Searching for Packages","text":"<p>To search for packages, you can use the <code>poetry search</code> command followed by the search query. For example, to search for packages related to \"flask\":</p> <pre><code>poetry search flask\n</code></pre> <p>This command will list all packages related to \"flask\" available on PyPI.</p>"},{"location":"POETRY/#summary","title":"Summary","text":"<ul> <li>Install dependencies: <code>poetry install</code></li> <li>Activate virtual environment: <code>poetry shell</code></li> <li>Add a package: <code>poetry add &lt;package-name&gt;</code></li> <li>Search for packages: <code>poetry search &lt;query&gt;</code></li> </ul> <p>By following these steps, you can efficiently manage your project's dependencies and environment using Poetry. For more detailed information, you can refer to the official Poetry documentation.</p>"},{"location":"project_report/","title":"Project Report: Temperature Analysis Project","text":""},{"location":"project_report/#technologies-used","title":"Technologies Used","text":"<ol> <li>Python: The primary programming language used for this project.</li> <li>Libraries:</li> <li>Pandas: For data manipulation and analysis.</li> <li>Requests: For making HTTP requests to download data.</li> <li>Matplotlib: For plotting and visualizing data.</li> <li>OS: For interacting with the operating system to handle file paths.</li> <li>Numpy: For numerical operations.</li> <li>Jupyter Notebook: For running and testing the Python code.</li> <li>Markdown: For creating this comprehensive project report.</li> </ol>"},{"location":"project_report/#problems-encountered","title":"Problems Encountered","text":"<ol> <li>Data Cleaning: Handling missing or inconsistent data in the datasets.</li> <li>HTTP Requests: Dealing with failed downloads or incomplete data retrieval.</li> <li>Data Analysis: Identifying the correct statistical methods to detect significant temperature changes.</li> <li>Code Integration: Ensuring that different scripts work seamlessly together.</li> </ol>"},{"location":"project_report/#detailed-description-of-the-code","title":"Detailed Description of the Code","text":""},{"location":"project_report/#downloadpy","title":"<code>download.py</code>","text":"<ul> <li>Purpose: This script is responsible for downloading the temperature data from a specified URL.</li> <li>Key Functions:</li> <li><code>download_data(url, save_path)</code>: Downloads the data from the given URL and saves it to the specified path.</li> <li>Technologies: Uses the <code>requests</code> library to handle HTTP requests and <code>os</code> for file path operations.</li> </ul>"},{"location":"project_report/#cleanpy","title":"<code>clean.py</code>","text":"<ul> <li>Purpose: This script cleans the downloaded data, handling missing values and ensuring the data is in a consistent format.</li> <li>Key Functions:</li> <li><code>clean_data(file_path)</code>: Reads the data from the given file path, cleans it, and returns a cleaned DataFrame.</li> <li>Technologies: Utilizes <code>pandas</code> for data manipulation.</li> </ul>"},{"location":"project_report/#yearly_querypy","title":"<code>yearly_query.py</code>","text":"<ul> <li>Purpose: This script queries the cleaned data to provide yearly statistics and trends.</li> <li>Key Functions:</li> <li><code>query_yearly_data(cleaned_data)</code>: Analyzes the cleaned data to extract yearly temperature trends.</li> <li>Technologies: Relies on <code>pandas</code> and <code>numpy</code> for data analysis.</li> </ul>"},{"location":"project_report/#detect_top5_temperature_changespy","title":"<code>detect_top5_temperature_changes.py</code>","text":"<ul> <li>Purpose: This script detects the top 5 years with the most significant temperature changes.</li> <li>Key Functions:</li> <li><code>detect_top5_changes(yearly_data)</code>: Identifies and returns the top 5 years with the highest temperature changes.</li> <li>Technologies: Uses <code>numpy</code> and <code>pandas</code> for statistical calculations and analysis.</li> </ul>"},{"location":"project_report/#data_vizpy","title":"<code>data_viz.py</code>","text":"<ul> <li>Purpose: This script is used for visualizing the temperature data trends and significant changes using line plots and bar charts.</li> <li>Key Functions:</li> <li><code>plot_temperature_trends(data)</code>: Plots the yearly temperature trends using a line plot.</li> <li><code>plot_top5_changes(data)</code>: Plots the top 5 temperature changes using a bar chart.</li> <li>Technologies: Uses <code>matplotlib.pyplot</code> for plotting.</li> </ul>"},{"location":"project_report/#conclusion","title":"Conclusion","text":"<p>This project aimed to analyze temperature data to identify significant changes over the years. Despite challenges with data cleaning and integration, the scripts work together to download, clean, analyze, and detect key trends in temperature changes. This documentation serves as a comprehensive guide to the project's progress, challenges, outcomes, and code functionality.</p>"},{"location":"wymagania_projektowe/","title":"ASEiED - projekty zaliczeniowe 2024","text":"<p>Uwaga: realizacj\u0119 projekt\u00f3w prosz\u0119 wykona\u0107 z wykorzystaniem \u015brodowiska AWS</p>"},{"location":"wymagania_projektowe/#zadanie-1-analiza-zmian-temperatury-w-europie","title":"Zadanie 1 - Analiza zmian temperatury w Europie","text":"<p>Cel: Dokonaj analizy danych klimatycznych z Europy, aby zidentyfikowa\u0107 trendy zmian temperatury w ostatnich dekadach.</p> <p>Dane: European Climate Assessment &amp; Dataset (https://www.ecad.eu/)</p> <p>Technologie: AWS EMR, Apache Spark, Python</p> <p>Wymagania:</p> <ul> <li>Wybierz 5 obszar\u00f3w z najwi\u0119kszymi zmianami temperatury.</li> <li>Stw\u00f3rz wizualizacje pokazuj\u0105ce zmiany temperatury na przestrzeni czasu.</li> <li>Opublikuj kod \u017ar\u00f3d\u0142owy i sprawozdanie na GitHub.</li> <li>Sprawozdanie projektu nale\u017cy zapisa\u0107 w pliku README.md</li> </ul>"}]}